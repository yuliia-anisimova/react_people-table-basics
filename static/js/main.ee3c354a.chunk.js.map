{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","slug","sex","name","to","cn","PersonInfo","selectedSlug","useParams","born","died","fatherName","motherName","mother","father","PeopleTable","people","isLoading","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findParent","parentName","find","PeoplePage","useState","setPeople","isError","setIsError","setIsLoading","areNoPeople","setAreNoPeople","loadPeople","avaliablePeople","length","peopleWithParents","showPeopleTable","useEffect","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ee3c354a.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport { FC } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonInfo: FC<Props> = ({ person }) => {\n  const { slug: selectedSlug } = useParams();\n\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': selectedSlug === slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother\n        ? (\n          <td><PersonLink person={mother} /></td>\n        )\n        : (\n          <td>{motherName || '-'}</td>\n        )}\n\n      {father\n        ? (\n          <td><PersonLink person={father} /></td>\n        )\n        : (\n          <td>{fatherName || '-'}</td>\n        )}\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n  isLoading: boolean;\n}\n\nexport const PeopleTable: FC<Props> = ({ people, isLoading }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading\n          ? (<Loader />)\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <PersonInfo person={person} key={person.slug} />\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nconst findParent = (people: Person[], parentName: string | null) => {\n  return people.find(({ name }) => name === parentName);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [areNoPeople, setAreNoPeople] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const avaliablePeople = await getPeople();\n\n      if (avaliablePeople.length) {\n        const peopleWithParents = avaliablePeople.map((person) => {\n          const { motherName, fatherName } = person;\n\n          const mother = findParent(avaliablePeople, motherName);\n          const father = findParent(avaliablePeople, fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(peopleWithParents);\n      }\n\n      if (!avaliablePeople.length) {\n        setAreNoPeople(true);\n      }\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const showPeopleTable = !isError && !areNoPeople;\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {showPeopleTable && (\n        <PeopleTable\n          people={people}\n          isLoading={isLoading}\n        />\n      )}\n\n      {areNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}